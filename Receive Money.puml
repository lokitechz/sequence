@startuml Inbound Funds Flow

autonumber "<b>[00]"
actor Client
box ROC
participant "Techcombank Mobile" as TCB
participant "Edge" as EDGE
participant "roc-oversea-transfer-dis" as OT
participant "arrangement-manager-extension" as AME
participant "Redis" as REDIS
database "ROC DB" as DB
end box
participant "redis" as REDIS
participant "Notihub" as NOTIHUB
queue "MSK Bankwide" as MSK
participant "Mule Internal" as MI
participant "Paylink" as PL
participant "Paylink DB" as PLDB
participant "T24" as T24
participant "Mule External" as ME
participant "Currencycloud" as CC

note over ME,CC: Currencycloud sends push notification when funds arrive

activate CC
CC -> ME: Push Notification (pending inbound funds)
ME -> MSK: Publish inbound funds message
OT --> MSK: Consume inbound funds message
activate OT
note right of OT
Step 1: Call CurrencyCloud to get funding transaction details
end note
OT -> ME: GET /v2/funding_transactions/{transaction_id}
activate ME
ME -> CC: Forward
activate CC
CC --> ME: Return result
deactivate CC
ME --> OT: Forward
deactivate ME

note right of OT
Step 2: Store transaction details into TCB database
end note
OT -> DB: INSERT INTO visa_inbound_funds
activate DB
DB --> OT: Insert success
deactivate DB

OT -> OT: Validate transaction details
alt Validation successful
    note right of OT
    Step 3: Call to arrangement service to get account details and verify account is valid to receive money
    end note
    OT -> AME: GET /service-api/v2/visa-accounts/{accountId}
    activate AME
    AME -> MI: Call T24 get account details\nPOST /internal/retails/v2/inquiry-account-services
    activate MI
    MI -> T24: Forward
    activate T24
    T24 --> MI: Return result
    deactivate T24
    MI --> AME: Forward
    deactivate MI
    AME -> AME: Validate account details
    alt Account valid to receive money
        AME --> OT: Return account details
        deactivate AME
    end
    OT -> OT: Process to receive money

    note right of OT
    Step 4: Call CurrencyCloud to accept or reject inbound funds
    Before proceeding ensure valid CurrencyCloud token.
    See separate diagram: 
    end note
    OT -> ME: POST /v2/collections_screening/{transaction_id}/complete\naccepted=true
    activate ME
    ME -> CC: Forward
    activate CC
    CC --> ME: Return result
    deactivate CC
    ME --> OT: Forward
    deactivate ME
    OT -> DB: UPDATE visa_inbound_funds SET status = "ACCEPTED"
    activate DB
    DB --> OT: Update success
    deactivate DB
    OT -> PL: Call Paylink to accounting

else Validation failed
    note right of OT
    Step 3.1: Call CurrencyCloud to accept or reject inbound funds
    Before proceeding ensure valid CurrencyCloud token.
    See separate diagram: 
    end note
    OT -> ME: POST /v2/collections_screening/{transaction_id}/complete\naccepted=false
    activate ME
    ME -> CC: Forward
    activate CC
    CC --> ME: Return result
    deactivate CC
    ME --> OT: Forward
    deactivate ME
    OT -> DB: UPDATE visa_inbound_funds SET status = "REJECTED"
    activate DB
    DB --> OT: Update success
    deactivate DB
    OT -> OT: End process
end
@enduml
