@startuml Inbound Funds Flow

autonumber "<b>[00]"
actor Client
box ROC
participant "Techcombank Mobile" as TCB
participant "Edge" as EDGE
participant "arrangement-manager-extension" as AME
database "ROC DB" as AMEDB
end box
box Paylink
participant "payment-initiation" as PI
participant "payment-order-fcy" as PO
queue "Kafka Internal" as PLK
participant "Paylink DB" as PLDB
end box
participant "T24" as T24
queue "MSK Bankwide" as MSK
participant "Notihub" as Notihub
participant "Mule External" as ME
participant "Currencycloud" as CC

note over ME,CC: Currencycloud sends push notification when funds arrive

activate CC
CC -> ME: Push Notification\nnotification_type: pending_cash_manager_transaction_notification
ME -> MSK: Push inbound funds message
PI --> MSK: Consume inbound funds message
note right of PI
Step 1: Call CurrencyCloud to get funding transaction details
end note
activate PI
PI -> ME: Get Funding Transaction Details
activate ME
ME -> CC: GET /v2/funding_transactions/{id}
CC --> ME: Funding Transaction Details
deactivate CC
ME --> PI: Return result
deactivate ME
note right of PI
Step 2: Check additional_information field for specified characters
end note
alt additional_information contains specified characters
    PI -> ME: Reject Transaction
    activate ME
    ME -> CC: POST /v2/collections_screening/{transaction_id}/complete\naccepted=false
    activate CC
    CC --> ME: Return result
    deactivate CC
    ME --> PI: Return result
    deactivate ME
else additional_information does not contain specified characters
    PI -> ME: Accept Transaction
    activate ME
    ME -> CC: POST /v2/collections_screening/{transaction_id}/complete\naccepted=true
    activate CC
    CC --> ME: Return result
    deactivate CC
    ME --> PI: Return result
    deactivate ME
end
PI -> PLDB: Store transaction status
activate PLDB
PLDB --> PI: Return result
deactivate PLDB

== Process if transaction is accepted ==
CC -> ME: Push Notification\nnotification_type: cash_manager_transaction_notification
ME -> MSK: Push inbound funds message completed transaction
note right of PI
Step 3: Consume inbound funds message completed transaction
end note
PI --> MSK: Consume inbound funds message completed transaction
PI -> AME: Get customer link account details\nGET /v1/visaxborder/account?accountId={accountId}&currency={currency}
activate AME
AME -> AMEDB: Query account details
activate AMEDB
AMEDB --> AME: Return result
deactivate AMEDB
AME --> PI: Return account details
deactivate AME
note right of PI
Step 4: Build kafka event for accounting
end note
PI -> PI: Build accounting message
PI -> PLK: Produce accounting message to Kafka
activate PLK
PO --> PLK: Consume accounting message from Kafka
deactivate PLK
activate PO
note right of PO
Step 5: Accounting to core banking system T24
end note
PO -> T24: POST /internal/bpm/v1/common-services/ft/internal/ac01
activate T24
T24 --> PO: Return result
deactivate T24
PO -> PLDB: Update transaction status to completed
activate PLDB
PLDB --> PO: Return result
deactivate PLDB
deactivate PO
T24 -> MSK: Send ABC message to bankwide system
Notihub --> MSK: Consume ABC message and notify client
activate Notihub
Notihub -> TCB: Send notification to Techcombank Mobile for Account Blance Change
deactivate Notihub

== Process auto move money form sub-account to master-account in Currencycloud ==
PO -> ME: Check sub-account balance and move money if needed
activate PO
activate ME
ME -> CC: GET /v2/balances/EUR?on_behalf_of={subAccountId}
activate CC
CC --> ME: Return result
deactivate CC
ME --> PO: Return result
alt Balance amount > 0
    PO -> ME: Make transfer to master account
    ME -> CC: POST /v2/transfers/create
    activate CC
    CC --> ME: Return result
    deactivate CC
    ME --> PO: Return result
end
deactivate ME
deactivate PO

@enduml
